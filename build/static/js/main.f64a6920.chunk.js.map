{"version":3,"sources":["components/addPhoneForm/index.js","components/PhonesList/SinglePerson/index.js","components/PhonesList/index.js","components/SearchFilter/index.js","services/phonebook.js","components/Notification/index.js","App.js","index.js"],"names":["AddPhoneForm","onSubmit","formState","onChangeName","onChangeNumber","value","name","onChange","number","type","SinglePerson","id","deleteContact","onClick","PhonesList","phoneList","className","map","i","SearchFilter","searchValue","filterPhones","baseUrl","methods","getAll","axios","get","then","response","data","create","newObject","post","update","put","deleteById","delete","Notification","message","error","text","App","useState","persons","setPersons","newName","setNewName","shownPhones","setShownPhones","setSearchValue","setMessage","useEffect","getPersons","ContactsService","checkPhonebookName","findIndex","person","search","filterValue","target","toLowerCase","filter","startsWith","event","preventDefault","newPerson","setTimeout","window","confirm","personId","find","item","UpdatedPerson","catch","personData","length","checkPhonebookId","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f64a6920.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst AddPhoneForm = ({ onSubmit, formState, onChangeName, onChangeNumber }) => {\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div>\r\n                name: <input value={formState.name} onChange={onChangeName} />\r\n            </div>\r\n            <div>\r\n                number: <input value={formState.number} onChange={onChangeNumber} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Add</button>\r\n            </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default AddPhoneForm;","import React from 'react';\r\n\r\n\r\nconst SinglePerson = ({ name, number, id, deleteContact }) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>{name} - {number}</span>\r\n            <button type=\"button\" onClick={() => deleteContact(id)}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePerson;","import React from 'react';\r\n\r\n//components\r\nimport SinglePerson from './SinglePerson';\r\n\r\n\r\nconst PhonesList = ({ phoneList, deleteContact }) => {\r\n\r\n    return (\r\n        <div className=\"phones\">\r\n            {phoneList.map(i => <SinglePerson deleteContact={deleteContact} key={`${i.id}-${i.name}`} name={i.name} id={i.id} number={i.number} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhonesList;","import React from 'react';\r\n\r\n\r\nconst SearchFilter = ({ searchValue, filterPhones }) => {\r\n\r\n    return (\r\n        <div>\r\n            filter shown with <input value={searchValue} onChange={filterPhones} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchFilter;","import axios from 'axios';\r\n\r\n\r\nconst baseUrl = 'https://blooming-river-87379.herokuapp.com/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst deleteById = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst methods = { getAll, create, update, deleteById };\r\n\r\nexport default methods;","import React from 'react';\r\n\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={`${message.error ? 'error' : 'success'}`}>\r\n        {message.text}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useEffect, useState } from 'react';\n\n\n//components\nimport AddPhoneForm from './components/addPhoneForm';\nimport PhonesList from './components/PhonesList';\nimport SearchFilter from './components/SearchFilter';\nimport ContactsService from './services/phonebook';\nimport Notification from './components/Notification';\n\n\nconst App = () => {\n  \n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState({\n    name: '', number: ''\n  });\n\n  const [ shownPhones, setShownPhones ] = useState([]);\n  const [ searchValue, setSearchValue ] = useState('');\n  const [message, setMessage] = useState({ error: null, text: ''});\n\n  useEffect(() => {\n    setShownPhones(persons);\n  }, [persons]);\n\n  useEffect(() => {\n    getPersons();\n  }, []);\n\n  const getPersons = () => {\n    ContactsService.getAll()\n    .then(response => {\n      setPersons(response);\n    });\n  }\n\n  const addNewPerson = (event) => {\n\n    setNewName(personData => {\n      return { ...personData, name: event.target.value }\n    });\n  }\n\n  const addNewNumber = (event) => {\n    setNewName(personData => {\n      return { ...personData, number: event.target.value }\n    });\n  }\n\n  const validateForm = () => {\n    if (newName.name && newName.number) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!validateForm()) {\n      return false;\n    }\n    if (checkPhonebookName(newName.name)) {\n      let newPerson = {\n        name: newName.name,\n        number: newName.number\n      }\n      ContactsService.create(newPerson)\n        .then(person => {\n          setMessage(\n            { error: false, text: `Contact ${newPerson.name} was added`}\n          );\n          setTimeout(() => {\n            setMessage({ error: '', text: ''})\n          }, 5000);\n          setPersons(persons => [ ...persons, person]);\n          setNewName({name: '', number: ''});\n        })\n    } else {\n      if (window.confirm(`${newName.name} is already added to phonebook, replace the old number with a new one?`)) {\n        let personId = persons.find(item => item.name === newName.name).id;\n        let newPerson = {\n          name: newName.name,\n          number: newName.number\n        }\n        ContactsService.update(personId, newPerson)\n          .then(UpdatedPerson => {\n            setMessage(\n              { error: false, text: `Contact ${newPerson.name} was updated`}\n            );\n            setTimeout(() => {\n              setMessage({ error: '', text: ''})\n            }, 5000);\n            setPersons(persons.map(person => person.name !== newName.name ? person : UpdatedPerson))\n            setNewName({name: '', number: ''});\n          })\n          .catch(error => {\n            setMessage(\n              { error: true, text: `Contact ${newPerson.name} was already deleted`}\n            );\n            setTimeout(() => {\n              setMessage({ error: '', text: ''})\n            }, 5000);\n            getPersons();\n          })\n      }\n    }\n  }\n\n  const filterPhones = (search) => {\n    let filterValue = search.target.value.toLowerCase();\n    setSearchValue(filterValue);\n    setShownPhones(persons.filter(person => person.name.toLowerCase().startsWith(filterValue)));\n  }\n  \n  const checkPhonebookName = (name) => {\n    const condition = persons.findIndex(person => person.name === name);\n    \n    if (condition >= 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const checkPhonebookId = (id) => {\n    const condition = persons.findIndex(person => person.id === id);\n    \n    if (condition >= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const deleteContact = (id) => {\n\n    if (window.confirm(\"Do you really want to delete this contact?\")) {\n      if (checkPhonebookId(id)) {\n        ContactsService.deleteById(id)\n          .then(person => {\n            setPersons(persons => [ ...persons.filter(item => item.id !== id)]);\n            setMessage(\n              { error: false, text:  `Contact was deleted`}\n            );\n            setTimeout(() => {\n              setMessage({ error: '', text: ''})\n            }, 5000);\n          })\n          .catch(error => {\n            setMessage(\n              { error: true, text:  `Contact was already deleted`}\n            );\n            setTimeout(() => {\n              setMessage({ error: '', text: ''})\n            }, 5000);\n            getPersons();\n          })\n      } else {\n        alert(`${newName.name} is already deleted from phonebook`);\n      }\n    }\n  }\n\n  return (\n    \n    <div>\n      <h2>Phonebook</h2>\n      {message.text && <Notification message={message} />}\n      <SearchFilter \n        filterPhones={filterPhones}\n        searchValue={searchValue}\n      />\n      <AddPhoneForm \n        formState={newName}\n        onSubmit={handleSubmit} \n        onChangeName={addNewPerson}\n        onChangeNumber={addNewNumber}  \n      />\n      <h2>Numbers</h2>\n      {shownPhones?.length > 0 && <PhonesList \n        phoneList={shownPhones}\n        deleteContact={deleteContact}\n      />}\n    </div>\n  )\n\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}